plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id 'java'
}

version = project.mod_version
group = project.maven_group

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.terraformersmc.com/' }
	maven {
       name = "sonatype-oss-snapshots1"
       url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
       mavenContent { snapshotsOnly() }
   	}
   	maven {
        url = "https://api.modrinth.com/maven"
    }
	mavenLocal()
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation "com.terraformersmc:modmenu:15.0.0-beta.3"
	modImplementation include("net.kyori:adventure-platform-fabric:6.6.0")
	include implementation("net.kyori:adventure-text-serializer-legacy:4.24.0")
	include implementation("com.github.vaapukkax:minehut-java-wrapper:1.2.3")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}